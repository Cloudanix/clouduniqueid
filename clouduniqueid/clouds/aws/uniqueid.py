from typing import Dict


unique_ids: Dict = {
    "a4b": {  # Alexa for Business
        "address-book": None,
        "conference-provider": None,
        "contact": None,
        "device": None,
        "network-profile": None,
        "profile": None,
        "room": None,
        "schedule": None,
        "skill-group": None,
        "user": None,
    },
    "access-analyzer": {  # IAM Access Analyzer
        "analyzer": None,
    },
    "acm": {  # AWS Certificate Manager
        "certificate": None,
    },
    "acm-pca": {  # AWS Certificate Manager Private Certificate Authority
        "certificate-authority": None,
    },
    "amplify": {  # AWS Amplify
        "apps": None,
    },
    "apigateway": {  # Manage Amazon API Gateway
        "": None,
    },
    "appconfig": {  # AWS AppConfig
        "application": None,
        "deploymentstrategy": None,
    },
    "appflow": {  # Amazon AppFlow
        "connectorprofile": None,
        "flow": None,
    },
    "appmesh": {  # AWS App Mesh
        "mesh": None,
    },
    "appmesh-preview": {  # AWS App Mesh Preview
        "mesh": None,
    },
    "appstream": {  # Amazon AppStream 2.0
        "fleet": None,
        "image": None,
        "image-builder": None,
        "stack": None,
    },
    "appsync": {  # AWS AppSync
        "apis": None,
    },
    "artifact": {  # AWS Artifact
        "agreement": None,
        "customer-agreement": None,
        "report-package": None,
    },
    "athena": {  # Amazon Athena
        "datacatalog": None,
        "workgroup": None,
    },
    "autoscaling": {  # Amazon EC2 Auto Scaling
        "autoScalingGroup": None,
        "launchConfiguration": None,
    },
    "aws-marketplace": {  # AWS Marketplace Catalog
    },
    "backup": {  # AWS Backup
        "backup-plan": None,
        "backup-vault": None,
    },
    "batch": {  # AWS Batch
        "job-definition": None,
        "job-queue": None,
    },
    "budgets": {  # AWS Budget Service
        "budget": None,
    },
    "cassandra": {  # Amazon Keyspaces (for Apache Cassandra)
        "": None,
    },
    "catalog": {  # AWS Service Catalog
        "portfolio": None,
        "product": None,
    },
    "chatbot": {  # AWS Chatbot
    },
    "chime": {  # Amazon Chime
        "meeting": None,
    },
    "cloud9": {  # AWS Cloud9
        "environment": None,
    },
    "clouddirectory": {  # Amazon Cloud Directory
        "directory": None,
        "schema": None,
    },
    "cloudformation": {  # AWS CloudFormation
        "changeSet": None,
        "stack": None,
        "stackset": None,
    },
    "cloudfront": {  # Amazon CloudFront
        "distribution": None,
        "origin-access-identity": None,
        "streaming-distribution": None,
    },
    "cloudhsm": {  # AWS CloudHSM
        "backup": None,
        "cluster": None,
    },
    "cloudsearch": {  # Amazon CloudSearch
        "domain": None,
    },
    "cloudtrail": {  # AWS CloudTrail
        "trail": None,
    },
    "cloudwatch": {  # Amazon CloudWatch
        "alarm": None,
        "dashboard": None,
        "insight-rule": None,
    },
    "codeartifact": {  # AWS CodeArtifact
        "domain": None,
        "package": None,
        "repository": None,
    },
    "codebuild": {  # AWS CodeBuild
        "build": None,
        "project": None,
        "report": None,
        "report-group": None,
    },
    "codecommit": {  # Amazon CodeGuru Reviewer
    },
    "codedeploy": {  # AWS CodeDeploy
        "application": None,
        "deploymentconfig": None,
        "deploymentgroup": None,
        "instance": None,
    },
    "codeguru-profiler": {  # Amazon CodeGuru Profiler
        "profilingGroup": None,
    },
    "codeguru-reviewer": {  # Amazon CodeGuru Reviewer
        ".+": None,
        "association": None,
    },
    "codepipeline": {  # AWS CodePipeline
        "actiontype": None,
        "webhook": None,
    },
    "codestar": {  # AWS CodeStar
        "project": None,
    },
    "codestar-connections": {  # AWS CodeStar Connections
        "connection": None,
    },
    "codestar-notifications": {  # AWS CodeStar Notifications
        "notificationrule": None,
    },
    "cognito-identity": {  # Amazon Cognito Identity
        "identitypool": None,
    },
    "cognito-idp": {  # Amazon Cognito User Pools
        "userpool": None,
    },
    "cognito-sync": {  # Amazon Cognito Sync
        "identitypool": None,
    },
    "comprehend": {  # Amazon Comprehend
        "document-classifier": None,
        "document-classifier-endpoint": None,
        "entity-recognizer": None,
    },
    "config": {  # AWS Config
        "aggregation-authorization": None,
        "config-aggregator": None,
        "config-rule": None,
        "conformance-pack": None,
        "organization-config-rule": None,
        "organization-conformance-pack": None,
        "remediation-configuration": None,
    },
    "connect": {  # Amazon Connect
        "instance": None,
    },
    "cur": {  # AWS Cost and Usage Report
        "definition": None,
    },
    "dataexchange": {  # AWS Data Exchange
        "data-sets": None,
        "jobs": None,
    },
    "datasync": {  # DataSync
        "agent": None,
        "location": None,
        "task": None,
    },
    "dax": {  # Amazon DynamoDB Accelerator (DAX)
        "cache": None,
    },
    "deepcomposer": {  # AWS DeepComposer
        "audio": None,
        "composition": None,
        "model": None,
    },
    "deeplens": {  # AWS DeepLens
        "device": None,
        "model": None,
        "project": None,
    },
    "deepracer": {  # AWS DeepRacer
        " evaluation_job": None,
        "leaderboard": None,
        "leaderboard_evaluation_job": None,
        "model": None,
        "track": None,
        "training_job": None,
    },
    "detective": {  # Amazon Detective
        "graph": None,
    },
    "devicefarm": {  # AWS Device Farm
        "artifact": None,
        "device": None,
        "deviceinstance": None,
        "devicepool": None,
        "instanceprofile": None,
        "job": None,
        "networkprofile": None,
        "project": None,
        "run": None,
        "sample": None,
        "session": None,
        "suite": None,
        "test": None,
        "testgrid-project": None,
        "testgrid-session": None,
        "upload": None,
        "vpceconfiguration": None,
    },
    "directconnect": {  # AWS Direct Connect
        "dx-gateway": None,
        "dxcon": None,
        "dxlag": None,
        "dxvif": None,
    },
    "dlm": {  # Amazon Data Lifecycle Manager
        "policy": None,
    },
    "dms": {  # AWS Database Migration Service
        "cert": None,
        "endpoint": None,
        "es": None,
        "rep": None,
        "subgrp": None,
        "task": None,
    },
    "ds": {  # AWS Directory Service
        "directory": None,
    },
    "dynamodb": {  # Amazon DynamoDB
        "global-table": None,
        "table": None,
    },
    "ec2": {  # AWS Systems Manager
        "capacity-reservation": 'arn:{partition}:ec2:{region}:{accountId}:capacity-reservation/{resource}',
        "client-vpn-endpoint": 'arn:{partition}:ec2:{region}:{accountId}:client-vpn-endpoint/{resource}',
        "customer-gateway": 'arn:{partition}:ec2:{region}:{accountId}:customer-gateway/{resource}',
        "dedicated-host": 'arn:{partition}:ec2:{region}:{accountId}:dedicated-host/{resource}',
        "dhcp-options": 'arn:{partition}:ec2:{region}:{accountId}:dhcp-options/{resource}',
        "elastic-gpu": 'arn:{partition}:ec2:{region}:{accountId}:elastic-gpu/{resource}',
        "fpga-image": 'arn:{partition}:ec2:{region}::fpga-image/{resource}',
        "image": 'arn:{partition}:ec2:{region}::image/{resource}',
        "instance": 'arn:{partition}:ec2:{region}:{accountId}:instance/{resource}',
        "internet-gateway": 'arn:{partition}:ec2:{region}:{accountId}:internet-gateway/{resource}',
        "key-pair": 'arn:{partition}:ec2:{region}:{accountId}:key-pair/{resource}',
        "launch-template": 'arn:{partition}:ec2:{region}:{accountId}:launch-template/{resource}',
        "local-gateway": 'arn:{partition}:ec2:{region}:{accountId}:local-gateway/{resource}',
        "local-gateway-route-table": 'arn:{partition}:ec2:{region}:{accountId}:local-gateway-route-table/{resource}',
        "local-gateway-route-table-virtual-interface-group-association": 'arn:{partition}:ec2:{region}:{accountId}:\
            local-gateway-route-table-virtual-interface-group-association/{resource}',
        "local-gateway-route-table-vpc-association": 'arn:{partition}:ec2:{region}:{accountId}:\
            local-gateway-route-table-vpc-association/{resource}',
        "local-gateway-virtual-interface": 'arn:{partition}:ec2:{region}:{accountId}:\
            local-gateway-virtual-interface/{resource}',
        "local-gateway-virtual-interface-group": 'arn:{partition}:ec2:{region}:{accountId}:\
            local-gateway-virtual-interface-group/{resource}',
        "network-acl": 'arn:{partition}:ec2:{region}:{accountId}:network-acl/{resource}',
        "network-interface": 'arn:{partition}:ec2:{region}:{accountId}:network-interface/{resource}',
        "placement-group": 'arn:{partition}:ec2:{region}:{accountId}:placement-group/{resource}',
        "reserved-instances": 'arn:{partition}:ec2:{region}:{accountId}:reserved-instances/{resource}',
        "route-table": 'arn:{partition}:ec2:{region}:{accountId}:route-table/{resource}',
        "security-group": 'arn:{partition}:ec2:{region}:{accountId}:security-group/{resource}',
        "snapshot": 'arn:{partition}:ec2:{region}::snapshot/{resource}',
        "spot-instances-request": 'arn:{partition}:ec2:{region}:{accountId}:spot-instances-request/{resource}',
        "subnet": 'arn:{partition}:ec2:{region}:{accountId}:subnet/{resource}',
        "traffic-mirror-filter": 'arn:{partition}:ec2:{region}:{accountId}:traffic-mirror-filter/{resource}',
        "traffic-mirror-filter-rule": 'arn:{partition}:ec2:{region}:{accountId}:traffic-mirror-filter-rule/{resource}',
        "traffic-mirror-session": 'arn:{partition}:ec2:{region}:{accountId}:traffic-mirror-session/{resource}',
        "traffic-mirror-target": 'arn:{partition}:ec2:{region}:{accountId}:traffic-mirror-target/{resource}',
        "transit-gateway": 'arn:{partition}:ec2:{region}:{accountId}:transit-gateway/{resource}',
        "transit-gateway-attachment": 'arn:{partition}:ec2:{region}:{accountId}:transit-gateway-attachment/{resource}',
        "transit-gateway-multicast-domain": 'arn:{partition}:ec2:{region}:{accountId}:\
            transit-gateway-multicast-domain/{resource}',
        "transit-gateway-route-table": 'arn:{partition}:ec2:{region}:{accountId}:\
            transit-gateway-route-table/{resource}',
        "volume": 'arn:{partition}:ec2:{region}:{accountId}:volume/{resource}',
        "vpc": 'arn:{partition}:ec2:{region}:{accountId}:vpc/{resource}',
        "vpc-endpoint": 'arn:{partition}:ec2:{region}:{accountId}:vpc-endpoint/{resource}',
        "vpc-endpoint-service": 'arn:{partition}:ec2:{region}:{accountId}:vpc-endpoint-service/{resource}',
        "vpc-flow-log": 'arn:{partition}:ec2:{region}:{accountId}:vpc-flow-log/{resource}',
        "vpc-peering-connection": 'arn:{partition}:ec2:{region}:{accountId}:vpc-peering-connection/{resource}',
        "vpn-connection": 'arn:{partition}:ec2:{region}:{accountId}:vpn-connection/{resource}',
        "vpn-gateway": 'arn:{partition}:ec2:{region}:{accountId}:vpn-gateway/{resource}',
    },
    "ecr": {  # Amazon Elastic Container Registry
        "repository": None,
    },
    "ecs": {  # Amazon Elastic Container Service
        "cluster": None,
        "container-instance": None,
        "service": None,
        "task": None,
        "task-definition": None,
        "task-set": None,
    },
    "eks": {  # Amazon Elastic Container Service for Kubernetes
        "cluster": None,
        "fargateprofile": None,
        "nodegroup": None,
    },
    "elastic-inference": {  # Amazon Elastic Inference
        "elastic-inference-accelerator": None,
    },
    "elasticbeanstalk": {  # AWS Elastic Beanstalk
        "application": None,
        "applicationversion": None,
        "configurationtemplate": None,
        "environment": None,
        "platform": None,
        "solutionstack": None,
    },
    "elasticfilesystem": {  # Amazon Elastic File System
        "access-point": None,
        "file-system": None,
    },
    "elasticloadbalancing": {  # AWS WAF V2
        "listener": None,
        "listener-rule": None,
        "loadbalancer": None,
        "targetgroup": None,
    },
    "elasticmapreduce": {  # Amazon Elastic MapReduce
        "cluster": None,
        "editor": None,
    },
    "elastictranscoder": {  # Amazon Elastic Transcoder
        "job": None,
        "pipeline": None,
        "preset": None,
    },
    "es": {  # Amazon Elasticsearch Service
        "domain": None,
    },
    "events": {  # Amazon EventBridge
        "event-bus": None,
        "event-source": None,
        "rule": None,
    },
    "execute-api": {  # Amazon API Gateway
    },
    "firehose": {  # Amazon Kinesis Firehose
        "deliverystream": None,
    },
    "fms": {  # AWS Firewall Manager
        "policy": None,
    },
    "forecast": {  # Amazon Forecast
        "algorithm": None,
        "dataset": None,
        "dataset-group": None,
        "dataset-import-job": None,
        "forecast": None,
        "forecast-export-job": None,
        "predictor": None,
    },
    "freertos": {  # Amazon FreeRTOS
        "configuration": None,
    },
    "fsx": {  # Amazon FSx
        "backup": None,
        "file-system": None,
        "task": None,
    },
    "gamelift": {  # Amazon GameLift
        "alias": None,
        "build": None,
        "fleet": None,
        "gamesessionqueue": None,
        "matchmakingconfiguration": None,
        "matchmakingruleset": None,
        "script": None,
    },
    "glacier": {  # Amazon Glacier
        "vaults": None,
    },
    "globalaccelerator": {  # AWS Global Accelerator
        "accelerator": None,
    },
    "glue": {  # AWS Glue
        "catalog": None,
        "connection": None,
        "crawler": None,
        "database": None,
        "devendpoint": None,
        "job": None,
        "mlTransform": None,
        "table": None,
        "tableVersion": None,
        "trigger": None,
        "userDefinedFunction": None,
        "workflow": None,
    },
    "greengrass": {  # AWS IoT Greengrass
        "": None,
    },
    "groundstation": {  # AWS Ground Station
        "config": None,
        "contact": None,
        "dataflow-endpoint-group": None,
        "groundstation": None,
        "mission-profile": None,
        "satellite": None,
    },
    "guardduty": {  # Amazon GuardDuty
        "detector": None,
    },
    "health": {  # AWS Health APIs and Notifications
        "event": None,
    },
    "honeycode": {  # Amazon Honeycode
        "screen": None,
        "screen-automation": None,
    },
    "iam": {  # AWS Security Token Service
        "access-report": 'arn:{partition}:iam::{accountId}:access-report/{resource}',
        "assumed-role": 'arn:{partition}:iam::{accountId}:assumed-role/{parent}/{resource}',
        "federated-user": 'arn:{partition}:iam::{accountId}:federated-user/{resource}',
        "group": 'arn:{partition}:iam::{accountId}:group/{resource}',
        "instance-profile": 'arn:{partition}:iam::{accountId}:instance-profile/{resource}',
        "mfa": 'arn:{partition}:iam::{accountId}:mfa/{resource}',
        "oidc-provider": 'arn:{partition}:iam::{accountId}:oidc-provider/{resource}',
        "policy": 'arn:{partition}:iam::{accountId}:policy/{resource}',
        "role": 'arn:{partition}:iam::{accountId}:role/{resource}',
        "saml-provider": 'arn:{partition}:iam::{accountId}:saml-provider/{resource}',
        "server-certificate": 'arn:{partition}:iam::{accountId}:server-certificate/{resource}',
        "sms-mfa": 'arn:{partition}:iam::{accountId}:sms-mfa/{resource}',
        "user": 'arn:{partition}:iam::{accountId}:user/{resource}',
    },
    "imagebuilder": {  # Amazon EC2 Image Builder
        "component": None,
        "distribution-configuration": None,
        "image": None,
        "image-pipeline": None,
        "image-recipe": None,
        "infrastructure-configuration": None,
    },
    "iot": {  # AWS IoT
        "authorizer": None,
        "billinggroup": None,
        "cacert": None,
        "cert": None,
        "client": None,
        "dimension": None,
        "index": None,
        "job": None,
        "mitigationaction": None,
        "otaupdate": None,
        "policy": None,
        "provisioningtemplate": None,
        "rolealias": None,
        "rule": None,
        "scheduledaudit": None,
        "securityprofile": None,
        "stream": None,
        "thing": None,
        "thinggroup": None,
        "thingtype": None,
        "topic": None,
        "topicfilter": None,
        "tunnel": None,
    },
    "iot1click": {  # AWS IoT 1-Click
        "devices": None,
        "projects": None,
    },
    "iotanalytics": {  # AWS IoT Analytics
        "channel": None,
        "dataset": None,
        "datastore": None,
        "pipeline": None,
    },
    "iotevents": {  # AWS IoT Events
        "detectorModel": None,
        "input": None,
    },
    "iotsitewise": {  # AWS IoT SiteWise
        "access-policy": None,
        "asset": None,
        "asset-model": None,
        "dashboard": None,
        "gateway": None,
        "portal": None,
        "project": None,
    },
    "iotthingsgraph": {  # AWS IoT Things Graph
        "Deployment": None,
        "System": None,
        "Workflow": None,
    },
    "kafka": {  # Amazon Managed Streaming for Kafka
        "cluster": None,
    },
    "kendra": {  # Amazon Kendra
        "index": None,
    },
    "kinesis": {  # Amazon Kinesis
        "stream": None,
    },
    "kinesisanalytics": {  # Amazon Kinesis Analytics V2
        "application": None,
    },
    "kinesisvideo": {  # Amazon Kinesis Video Streams
        "channel": None,
        "stream": None,
    },
    "kms": {  # AWS Key Management Service
        "alias": None,
        "key": None,
    },
    "lambda": {  # AWS Lambda
        "event-source-mapping": 'arn:{partition}:lambda:{region}:{accountId}:event-source-mapping:{resource}',
        "function": 'arn:{partition}:lambda:{region}:{accountId}:function:{resource}',
        "code-signing-config": 'arn:{partition}:lambda:{region}:{accountId}:code-signing-config:{resource}',
        "alias": 'arn:{partition}:lambda:{region}:{accountId}:function:{parent}:{resource}',
        "version": 'arn:{partition}:lambda:{region}:{accountId}:function:{parent}:{resource}',
        "layer": 'arn:{partition}:lambda:{region}:{accountId}:layer:{resource}',
        "layer-version": 'arn:{partition}:lambda:{region}:{accountId}:layer:{parent}:{resource}',
    },
    "lex": {  # Amazon Lex
        "bot": None,
        "bot-channel": None,
        "intent": None,
        "slottype": None,
    },
    "license-manager": {  # AWS License Manager
        "license-configuration": None,
    },
    "lightsail": {  # Amazon Lightsail
        "CloudFormationStackRecord": None,
        "Disk": None,
        "DiskSnapshot": None,
        "Domain": None,
        "ExportSnapshotRecord": None,
        "Instance": None,
        "InstanceSnapshot": None,
        "KeyPair": None,
        "LoadBalancer": None,
        "LoadBalancerTlsCertificate": None,
        "PeeredVpc": None,
        "RelationalDatabase": None,
        "RelationalDatabaseSnapshot": None,
        "StaticIp": None,
    },
    "logs": {  # Amazon CloudWatch Logs
        "log-group": None,
    },
    "machinelearning": {  # Amazon Machine Learning
        "batchprediction": None,
        "datasource": None,
        "evaluation": None,
        "mlmodel": None,
    },
    "macie2": {  # Amazon Macie
        "classification-job": None,
        "custom-data-identifier": None,
        "findings-filter": None,
        "member": None,
    },
    "managedblockchain": {  # Amazon Managed Blockchain
        "invitations": None,
        "members": None,
        "networks": None,
        "nodes": None,
        "proposals": None,
    },
    "mediaconnect": {  # AWS Elemental MediaConnect
        "entitlement": None,
        "flow": None,
        "output": None,
        "source": None,
    },
    "mediaconvert": {  # AWS Elemental MediaConvert
        "certificates": None,
        "jobTemplates": None,
        "jobs": None,
        "presets": None,
        "queues": None,
    },
    "medialive": {  # AWS Elemental MediaLive
        "channel": None,
        "input": None,
        "inputDevice": None,
        "inputSecurityGroup": None,
        "multiplex": None,
        "offering": None,
        "reservation": None,
    },
    "mediapackage": {  # AWS Elemental MediaPackage
        "channels": None,
        "origin_endpoints": None,
    },
    "mediapackage-vod": {  # AWS Elemental MediaPackage VOD
        "assets": None,
        "packaging-configurations": None,
        "packaging-groups": None,
    },
    "mediastore": {  # AWS Elemental MediaStore
        "container": None,
    },
    "mediatailor": {  # AWS Elemental MediaTailor
        "playbackConfiguration": None,
    },
    "mgh": {  # AWS Migration Hub
        "progressUpdateStream": None,
    },
    "mobilehub": {  # AWS Mobile Hub
        "project": None,
    },
    "mobiletargeting": {  # Amazon Pinpoint
        "apps": None,
        "recommenders": None,
        "templates": None,
    },
    "mq": {  # Amazon MQ
        "broker": None,
        "configuration": None,
    },
    "neptune-db": {  # Amazon Neptune
    },
    "networkmanager": {  # Network Manager
        "device": None,
        "global-network": None,
        "link": None,
        "site": None,
    },
    "opsworks": {  # AWS OpsWorks
        "stack": None,
    },
    "organizations": {  # AWS Organizations
        "account": None,
        "handshake": None,
        "organization": None,
        "ou": None,
        "policy": None,
        "root": None,
    },
    "outposts": {  # AWS Outposts
        "order": None,
        "outpost": None,
        "site": None,
    },
    "personalize": {  # Amazon Personalize
        "algorithm": None,
        "campaign": None,
        "dataset": None,
        "dataset-group": None,
        "dataset-import-job": None,
        "event-tracker": None,
        "feature-transformation": None,
        "recipe": None,
        "schema": None,
        "solution": None,
    },
    "pi": {  # AWS Performance Insights
        "metrics": None,
    },
    "polly": {  # Amazon Polly
        "lexicon": None,
    },
    "qldb": {  # Amazon QLDB
        "ledger": None,
        "stream": None,
    },
    "quicksight": {  # Amazon QuickSight
        "assignment": None,
        "dashboard": None,
        "group": None,
        "template": None,
        "user": None,
    },
    "ram": {  # AWS Resource Access Manager
        "permission": None,
        "resource-share": None,
        "resource-share-invitation": None,
    },
    "rds": {  # Amazon RDS
        "cluster": None,
        "cluster-endpoint": None,
        "cluster-pg": None,
        "cluster-snapshot": None,
        "db": None,
        "db-proxy": None,
        "es": None,
        "og": None,
        "pg": None,
        "ri": None,
        "secgrp": None,
        "snapshot": None,
        "subgrp": None,
        "target": None,
        "target-group": None,
    },
    "rds-db": {  # Amazon RDS IAM Authentication
        "dbuser": None,
    },
    "redshift": {  # Amazon Redshift
        "cluster": None,
        "dbgroup": None,
        "dbname": None,
        "dbuser": None,
        "eventsubscription": None,
        "hsmclientcertificate": None,
        "hsmconfiguration": None,
        "parametergroup": None,
        "securitygroup": None,
        "securitygroupingress": None,
        "snapshot": None,
        "snapshotcopygrant": None,
        "snapshotschedule": None,
        "subnetgroup": None,
    },
    "rekognition": {  # Amazon Rekognition
        "collection": None,
        "project": None,
        "streamprocessor": None,
    },
    "resource-groups": {  # AWS Resource Groups
        "group": None,
    },
    "robomaker": {  # AWS RoboMaker
        "deployment-fleet": None,
        "deployment-job": None,
        "robot": None,
        "robot-application": None,
        "simulation-application": None,
        "simulation-job": None,
        "simulation-job-batch": None,
    },
    "route53": {  # Amazon Route 53
        "change": None,
        "delegationset": None,
        "healthcheck": None,
        "hostedzone": None,
        "queryloggingconfig": None,
        "trafficpolicy": None,
        "trafficpolicyinstance": None,
    },
    "route53resolver": {  # Amazon Route 53 Resolver
        "resolver-endpoint": None,
        "resolver-rule": None,
    },
    "s3": {  # Amazon S3
        "bucket": 'arn:{partition}:s3:::{resource}',
        "accesspoint": None,
        "job": None,
    },
    "sagemaker": {  # Amazon SageMaker
        "algorithm": None,
        "app": None,
        "automl-job": None,
        "code-repository": None,
        "compilation-job": None,
        "domain": None,
        "endpoint": None,
        "endpoint-config": None,
        "experiment": None,
        "experiment-trial": None,
        "experiment-trial-component": None,
        "flow-definition": None,
        "human-loop": None,
        "human-task-ui": None,
        "hyper-parameter-tuning-job": None,
        "labeling-job": None,
        "model": None,
        "model-package": None,
        "monitoring-schedule": None,
        "notebook-instance": None,
        "notebook-instance-lifecycle-config": None,
        "processing-job": None,
        "training-job": None,
        "transform-job": None,
        "user-profile": None,
        "workforce": None,
        "workteam": None,
    },
    "savingsplans": {  # AWS Savings Plans
        "savingsplan": None,
    },
    "schemas": {  # Amazon EventBridge Schemas
        "discoverer": None,
        "registry": None,
        "schema": None,
    },
    "sdb": {  # Amazon SimpleDB
        "domain": None,
    },
    "secretsmanager": {  # AWS Secrets Manager
        "secret": None,
    },
    "securityhub": {  # AWS Security Hub
        "hub": None,
        "product": None,
    },
    "serverlessrepo": {  # AWS Serverless Application Repository
        "applications": None,
    },
    "servicediscovery": {  # AWS Cloud Map
        "namespace": None,
        "service": None,
    },
    "servicequotas": {  # Service Quotas
    },
    "ses": {  # Amazon SES
        "configuration-set": None,
        "custom-verification-email-template": None,
        "dedicated-ip-pool": None,
        "deliverability-test-report": None,
        "identity": None,
        "receipt-filter": None,
        "receipt-rule-set": None,
        "template": None,
    },
    "shield": {  # AWS Shield
        "attack": None,
        "protection": None,
    },
    "signer": {  # AWS Code Signing for Amazon FreeRTOS
        "": None,
    },
    "sns": {  # Amazon SNS
    },
    "sqs": {  # Amazon SQS
        "": None,
    },
    "ssm": {  # AWS Systems Manager
        "association": None,
        "automation-definition": None,
        "automation-execution": None,
        "document": None,
        "maintenancewindow": None,
        "managed-instance": None,
        "managed-instance-inventory": None,
        "opsitem": None,
        "parameter": None,
        "patchbaseline": None,
        "resource-data-sync": None,
        "servicesetting": None,
        "session": None,
        "windowtarget": None,
        "windowtask": None,
    },
    "states": {  # AWS Step Functions
        "activity": None,
        "execution": None,
        "stateMachine": None,
    },
    "storagegateway": {  # Amazon Storage Gateway
        "gateway": None,
        "share": None,
        "tape": None,
    },
    "sumerian": {  # Amazon Sumerian
        "project": None,
    },
    "swf": {  # Amazon Simple Workflow Service
        "domain": None,
    },
    "synthetics": {  # Amazon CloudWatch Synthetics
        "canary": None,
    },
    "transfer": {  # AWS Transfer for SFTP
        "server": None,
        "user": None,
    },
    "trustedadvisor": {  # AWS Trusted Advisor
        "checks": None,
    },
    "waf": {  # AWS WAF
        "bytematchset": None,
        "geomatchset": None,
        "ipset": None,
        "ratebasedrule": None,
        "regexmatch": None,
        "regexpatternset": None,
        "rule": None,
        "rulegroup": None,
        "sizeconstraintset": None,
        "sqlinjectionset": None,
        "webacl": None,
        "xssmatchset": None,
    },
    "waf-regional": {  # AWS WAF Regional
        "bytematchset": None,
        "geomatchset": None,
        "ipset": None,
        "ratebasedrule": None,
        "regexmatch": None,
        "regexpatternset": None,
        "rule": None,
        "rulegroup": None,
        "sizeconstraintset": None,
        "sqlinjectionset": None,
        "webacl": None,
        "xssmatchset": None,
    },
    "wafv2": {  # AWS WAF V2
    },
    "wellarchitected": {  # AWS Well-Architected Tool
        "workload": None,
    },
    "worklink": {  # Amazon WorkLink
        "fleet": None,
    },
    "workmail": {  # Amazon WorkMail
        "organization": None,
    },
    "workmailmessageflow": {  # Amazon WorkMail Message Flow
        "message": None,
    },
    "workspaces": {  # Amazon WorkSpaces
        "directory": None,
        "workspace": None,
        "workspacebundle": None,
        "workspaceipgroup": None,
    },
    "xray": {  # AWS X-Ray
        "group": None,
        "sampling-rule": None,
    },
}
